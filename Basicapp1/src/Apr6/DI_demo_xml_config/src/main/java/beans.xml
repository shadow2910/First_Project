<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
	
	<bean id="wish1" class="com.cg.spring.DI_demo.bean.Wisher" scope="prototype"  lazy-init="true" 
				init-method="wishInit" destroy-method="wishDestroy">
		<property name="message" value="Good Afternoon...!">	</property>
	</bean>
	<bean id="dpp" class="com.cg.spring.DI_demo.pp.DemoPostProcessor">	</bean>
	
	<bean id="add1" class="com.cg.spring.DI_demo.bean.Address">	
		<property name="hno" value="7-8-6">	</property>
		<property name="street" value="MG Street"></property>
		<property name="city" value="Hyderabad"></property>
		<property name="state" value="Telangana"></property>
	</bean>
	
	
	<bean id="per1" class="com.cg.spring.DI_demo.bean.Person">
	<property name="ssn" value="7001"></property>
	<property name="name" value="Ajay Saxena"></property>	
	<property name="address" ref="add2"></property>
	</bean>
	
</beans>



<!--  comment
We can create any number of beans for a class.
id="wish1"   (id of bean for refrence)

class="classpath.classname"

scope="prototype"	(scope of bean class)

lazy-init="true" (to enable lazy fetching)

init-method="method name from bean class" (methods which is called while object creation)

destroy-method="method name from bean class"  (method which is called at object destruction)

name="message"   (data member of Wisher class)

value="Text"   (default value)

name="address" ref="add1"   (Dependency injection-setter injection)
						   (setter method is called to inject dependecy)


-->


